{"version":3,"sources":["webpack:///./src/components/blogPreview/style.js","webpack:///./src/components/blogPreview/index.js","webpack:///./src/pages/blog.js"],"names":["BlogPreviewStyle","styled","div","props","theme","textColor","textAccent","bgAccent","bgColor","BlogPreview","data","postUrl","fields","postType","slug","to","className","date","frontmatter","format","src","image","publicURL","title","tags","map","tag","key","description","url","countOnly","Blog","useStaticQuery","allMarkdownRemark","nodes","node","id"],"mappings":"sJA2FeA,E,UAzFUC,EAAOC,IAAV,6EAAGD,CAAH,i1BACS,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,aAgC/B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,cAIrB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,aACV,SAAAF,GAAK,OAAIA,EAAMC,MAAMG,YAiBrB,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,WAqBpC,SAAAL,GAAK,OAAIA,EAAMC,MAAMI,WACV,SAAAL,GAAK,OAAIA,EAAMC,MAAME,c,YCvClCG,IAjCK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEbC,EAAO,IAAOD,EAAKE,OAAOC,SAAnB,IAA+BH,EAAKE,OAAOE,KAA3C,IAEb,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAIJ,GACN,yBAAKK,UAAU,QACX,8BAAM,kBAAC,IAAD,CAAQC,KAAMP,EAAKQ,YAAYD,KAAME,OAAO,oBAEtD,yBAAKH,UAAU,WACX,yBAAKI,IAAKV,EAAKQ,YAAYG,MAAMC,aAErC,4BAAKZ,EAAKQ,YAAYK,OACtB,4BACKb,EAAKQ,YAAYM,KAAKC,KAAI,SAAAC,GAAG,OAC1B,wBAAIC,IAAKD,EAAKV,UAAU,OAAOU,OAGvC,uBAAGV,UAAU,eAAeN,EAAKQ,YAAYU,aAC7C,yBAAKZ,UAAU,SACX,4BAAQA,UAAU,sBAAlB,eACA,kBAAC,IAAD,CAAYa,IAAKlB,EAASY,MAAOb,EAAKQ,YAAYK,MAAOO,WAAW,S,kCC7BxF,oEA8CeC,UAzCF,WACT,IAAMrB,EAAOsB,YAAe,cA4B5B,OACI,kBAAC,IAAD,KACI,4CACA,yBAAKhB,UAAU,YACVN,EAAKuB,kBAAkBC,MAAMT,KAAI,SAAAU,GAAI,OAClC,kBAAC,IAAD,CAAaR,IAAKQ,EAAKC,GAAI1B,KAAMyB","file":"component---src-pages-blog-js-5d718bef455040c04bd7.js","sourcesContent":["import styled from 'styled-components'\n\nconst BlogPreviewStyle = styled.div`\n    border-top: 0.1em dotted ${props => props.theme.textColor};\n\n    @media (orientation: landscape) {\n        flex-basis: 47%;\n    }\n    @media (orientation: portrait) {\n        width: 100%;\n    }\n\n    a {\n        text-decoration: none;\n    }\n\n    h3{\n        margin-top: 0.7em;\n        margin-bottom: 0.5em;\n    }\n\n    p{\n        margin-top: 0.5em;\n        margin-bottom: 0.5em;\n    }\n\n    ul{\n        padding: 0;\n        margin 0;\n        display: flex;\n        flex-direction: row;\n        list-style-type: none;\n        li {\n            padding: 0.1em;\n            margin-right: 1em;\n            color: ${props => props.theme.textAccent};\n            border-radius: 10%;\n        }\n        li:hover {\n            color: ${props => props.theme.textColor};\n            background-color: ${props => props.theme.bgAccent};\n        }\n    }\n\n    .tag {\n        font-size: 0.8em;\n    }\n\n    .date {\n        margin-top: -0.7em;\n        text-align: center;\n        font-size: 0.7em;\n        // font-weight: 600;\n        // font-family: 'Montserrat', sans-serif;\n\n        span {\n            padding: 0.1em 0.5em 0.1em;\n            background-color: ${props => props.theme.bgColor};\n        }\n    }\n\n    .description {\n        margin-top: 1em;\n        font-size: 0.8em;\n        line-height: 1.5;\n    }\n\n    .preview {\n        margin-top: 1em;\n        img {\n            width: 100%;\n        }\n    }\n\n    .readMore {\n        padding: 0.4em 0.6em 0.4em;\n        font-size: 0.8em;\n        font-weight: 600;\n        color: ${props => props.theme.bgColor};\n        background-color: ${props => props.theme.textAccent};\n    }\n\n    .links{\n        margin-top: 1em;\n        margin-bottom: 0.5em;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n    }\n`\n\nexport default BlogPreviewStyle\n","import React from 'react'\nimport Moment from 'react-moment'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport BlogPreviewStyle from './style'\nimport CommentBox from '../commentBox'\n\nconst BlogPreview = ({ data }) => {\n\n    const postUrl = `/${data.fields.postType}/${data.fields.slug}/`\n\n    return (\n        <BlogPreviewStyle>\n            <Link to={postUrl}>\n                <div className=\"date\">\n                    <span><Moment date={data.frontmatter.date} format=\"MMMM DD, YYYY\" /></span>\n                </div>\n                <div className=\"preview\">\n                    <img src={data.frontmatter.image.publicURL} />\n                </div>\n                <h3>{data.frontmatter.title}</h3>\n                <ul>\n                    {data.frontmatter.tags.map(tag => (\n                        <li key={tag} className=\"tag\">{tag}</li>\n                    ))}\n                </ul>\n                <p className=\"description\">{data.frontmatter.description}</p>\n                <div className=\"links\">\n                    <button className=\"accentBtn readMore\">Read More â†’</button>\n                    <CommentBox url={postUrl} title={data.frontmatter.title} countOnly={true}/>\n                </div>\n            </Link>\n        </BlogPreviewStyle>\n    )\n}\n\nBlogPreview.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nexport default BlogPreview\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Layout from '../templates/layout'\nimport BlogPreview from '../components/blogPreview'\n\nconst Blog = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allMarkdownRemark(\n                limit: 1000\n                filter: { fileAbsolutePath: { regex: \"/content/articles/\" } }\n                sort: { fields: [frontmatter___date], order: DESC }\n            ) {\n                nodes {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        tags\n                        date\n                        image {\n                            id\n                            publicURL\n                        }\n                    }\n                    fields {\n                        slug\n                        postType\n                    }\n                }\n            }\n        }\n    `)\n\n    return (\n        <Layout>\n            <h2>All Articles</h2>\n            <div className=\"blogList\">\n                {data.allMarkdownRemark.nodes.map(node => (\n                    <BlogPreview key={node.id} data={node} />\n                ))}\n            </div>\n        </Layout>\n    )\n}\n\nexport default Blog\n"],"sourceRoot":""}